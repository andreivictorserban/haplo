std:plugin:resources("viewer.css")

if(showChanges) {
  <div id="z__docstore_previous_version" style="display:none">
    render(_viewerShowChangesFromDocumentDeferred)
  </div>
  std:plugin:resources("changes.js")
  <div id="z__docstore_changes_configuration"
      data-filter=currentParams.filter
  >
    template:std:oforms:changes()
  </div>
}

if(requiresComments) {
    std:plugin:resources("comments.css" "comments.js")
    // Configuration of commenting system
    <div id="z__docstore_comments_configuration"
        data-displayedversion=versionForComments
        data-view=if(options.viewComments){"1"}
        data-add=if(options.addComment){"1"}
        data-url=options.commentsUrl
        data-isviewer="1"
        data-showcomments=currentParams.comment
        data-filter=currentParams.filter
        data-changes=currentParams.changes
        data-privatecommentsenabled=if(options.privateCommentsEnabled){"1"}
        data-addprivatecommentlabel=options.addPrivateCommentLabel
        data-privatecommentmessage=options.privateCommentMessage
        data-addprivatecommentonly=if(options.addPrivateCommentOnly){"1"}
    >
        std:form:token()
    </div>
}

if(additionalUI.top) { render(additionalUI.top) }

<div>
  if(options.viewComments) {
    if(currentParams.comment) {
      std:ui:button-link:active(url ? *currentParams !comment) { "Showing comments" }
    } else {
      std:ui:button-link(url ? *currentParams comment="1") { "Show comments" }
    }
  }
  if(showChangesFrom) {
    if(currentParams.changes) {
      std:ui:button-link:active(url ? *currentParams !changes) { "Changes from:" }
      <select id="z__docstore_choose_version" style="max-width:19%;">
        each(_changesVersionView) {
            <option
                value=url(? *^{currentParams} version=^{version} from=row.version)
                selected=if(selected) { "selected" }
              >
              std:date(datetime) " (" row.user.name ")"
            </option>
        }
      </select>
    } else {
      std:ui:button-link(url ? *currentParams changes="1") { "Show changes" }
    }
  }
  <div style="float:right;">
  if(canFilter) {
    if(currentParams.filter) {
      std:ui:button-link:active(url ? *currentParams !filter) { "Filtering questions" }
    } else {
      std:ui:button-link(url ? *currentParams filter="1") { "Filter questions" }
    }
  }
  </div>
  <div id="z__no_changes_warning" style="display:none;">std:ui:notice("No changes to display")</div>
  <div id="z__no_comments_warning" style="display:none;">std:ui:notice("No comments to display")</div>
</div>

unless(document) {
  std:ui:notice("The form has not yet been completed.")
} else {
  if(showingCurrent) {
    if(_uncommittedChangesWarningText) {
      std:ui:notice(_uncommittedChangesWarningText)
    }
  }
  <div id="z__docstore_body">
    render(_viewerBody)
  </div>
}

if(additionalUI.bottom) { render(additionalUI.bottom) }
