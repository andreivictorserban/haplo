std:plugin:resources("viewer.css")

if(requiresComments) {
    std:plugin:resources("comments.css" "comments.js")
    // Configuration of commenting system
    <div id="z__docstore_comments_configuration"
        data-displayedversion=versionForComments
        data-view=if(options.viewComments){"1"}
        data-add=if(options.addComment){"1"}
        data-url=options.commentsUrl
        data-isviewer="1"
    >
        std:form:token()
    </div>
}

if(additionalUI.top) { render(additionalUI.top) }

// Only show changes UI if there are options (more than one version, show versions enabled)
if(_changesVersionView.length) {
  <div style="text-align:right">
    if(showChangesFromDocument) {
      "Changes from " <select id="z__docstore_choose_version">
        each(_changesVersionView) {
            <option
                value=url(? version=^{version} from=row.version)
                selected=if(selected) { "selected" }
              >
              std:date(datetime) " (" row.user.name ")"
            </option>
        }
      </select><br>
      <label><input type="checkbox" id="z__docstore_show_unchanged"> "Show unchanged"</label>
    } else {
      <a href=url(? version=version from="previous") class="z__button_link"> "Show changes" </a>
    }
  </div>
}

unless(document) {
  std:ui:notice("The form has not yet been completed.")
} else {
  if(showingCurrent) {
    if(_uncommittedChangesWarningText) {
      std:ui:notice(_uncommittedChangesWarningText)
    }
  }
  <div id="z__docstore_body">
    render(_viewerBody)
  </div>
}

if(additionalUI.bottom) { render(additionalUI.bottom) }

if(showChangesFromDocument) {
  <div id="z__docstore_previous_version" style="display:none">
    render(_viewerShowChangesFromDocumentDeferred)
  </div>
  template:std:oforms:changes()
  std:plugin:resources("changes.js")
}
