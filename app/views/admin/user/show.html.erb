<%
  @page_title = h(@user.name)
  
  change_state_buttons = if @is_user
    [
      [User::KIND_USER, (@user.kind == User::KIND_USER_BLOCKED) ? "Unblock" : "Undelete"],
      [User::KIND_USER_BLOCKED, "Block"],
      [User::KIND_USER_DELETED, "Delete"],
    ]
  else
    [
      [User::KIND_GROUP, "Enable"],
      [User::KIND_GROUP_DISABLED, "Disable"],
    ]
  end
  allowed_edit_main_details = @user.id > User::USER_ID_MAX_PROTECTED
  allowed_edit_main_details = false if @user.kind == User::KIND_SERVICE_USER
  change_state_buttons = [] unless allowed_edit_main_details && (@user.id != @request_user.id)
  is_active = @user.kind <= User::KIND__MAX_ACTIVE
  show_access_buttons = true
  show_property_buttons = true

  plugin_user_info = []
  if @is_user
    call_hook(:hUserAdminUserInterface) do |hooks|
      r = hooks.run(@user)
      plugin_user_info = r.information
      show_access_buttons = false unless r.showEditAccessControl
      show_property_buttons = false unless r.showEditProperties
    end
  end

  status_message_html = case @user.kind
    when User::KIND_USER_BLOCKED;   "This user is <b>blocked</b> and cannot log in."
    when User::KIND_USER_DELETED;   "This user is <b>deleted</b> and cannot log in."
    when User::KIND_GROUP_DISABLED; "This group is <b>disabled</b> and does not affect authorisation."
    else; nil
  end

  client_side_controller_js('show_user')

  is_normal_user = (@is_user && @user.id != User::USER_ANONYMOUS)
-%>

<%= sys_mng_header %>

<!-- ------------------ USER DETAILS ------------------ -->

<table class="z__mangement_kv_table">
  <tr><th>Name</th><td><%= h(@user.name) %></td></tr>

  <% if status_message_html %>
    <tr><th></th><td><%= status_message_html %></td></tr>
  <% end %>

  <% if is_normal_user %>
  <tr><th>Email address</th><td><%= h(@user.email) %></td></tr>
  <tr><th>User ID</th><td><%= @user.id %></td></tr>
  <tr><th>Token serial</th><td><% if @user.otp_identifier != nil %><%= h(@user.otp_identifier) %><% else %><i>no token</i><% end %></td></tr>
  <% end %>

  <% if @is_group || @is_service_user %>
  <%= code_show_in_table(@user.code) %>
  <tr><th>Notification email</th><td><%= h(@user.email) %></td></tr>
  <tr><th><% if @is_group %>Group<% else %>Service user<% end %> ID</th><td><%= h(@user.id) %></td></tr>
  <% end %>

  <tr><th>Represented by</th><td>
    <% if @user.objref %>
      <%= @user.objref.to_presentation %><% if @representative_object %> : <a href="<%= h(object_urlpath(@representative_object)) %>" target="_blank"><%= h(@representative_object.first_attr(KConstants::A_TITLE).to_s) %></a><% end %> &nbsp; <a href="/do/admin/user/set-representative-object/<%= @user.id %>">Change...</a>
    <% else %>
      <i>no object</i> &nbsp; <a href="/do/admin/user/set-representative-object/<%= @user.id %>">Set...</a>
    <% end %>
  </td>

  <% if is_normal_user %>
  <tr><th>Last authenticated</th><td>
    <% if @login_audit_entry %>
      <%= h(@login_audit_entry.created_at.strftime('%Y-%m-%d %H:%M')) %> GMT, from <%= h(@login_audit_entry.remote_addr) %>
    <% else %>
      <i>never</i>
    <% end %>
  </td>
  <% end %>

  <%
    # Plugins can add arbitary information to the user page
    if plugin_user_info.kind_of?(Array) && !(plugin_user_info.empty?)
      %><tr><th>Information</th><td><%
        plugin_user_info.each do |link,text|
          if link.nil?
            %><%= h(text) %><br><%
          else
            %><a href="<%= h(link) %>" target="_blank"><%= h(text) %></a><br><%
          end
        end
      %></td></tr><%
    end
  %>
</table>
<% if show_access_buttons %>
  <div class="z__management_extra_buttons_holder">
    <%
      change_state_buttons.each do |state,label|
        if @user.kind != state
          %><form method="post" action="/do/admin/user/change_state/<%= @user.id %>?state=<%= state %>" target="submenu"><%= form_csrf_token %>
            <input type="submit" value="<%= label %>">
          </form><%
        end
      end
    -%>
  </div>
<% end %>
<%= (is_active && allowed_edit_main_details && show_access_buttons) ? sys_mng_edit_button("/do/admin/user/#{@is_user ? 'edit' : 'edit_group'}/#{@user.id}") : sys_mng_edit_button_disabled() %>

<!-- ------------------ GROUP MEMBERSHIP ------------------ -->

<h1>Group membership</h1>
<%
  groups = @user.groups
  if groups.empty?
    %><p><i>(not a member of any group)</i></p><%
  else
    groups.each do |group|
      %><%= user_html(group) %><%
    end
  end
%>
<%= (is_active && allowed_edit_main_details && show_access_buttons) ? sys_mng_edit_button("/do/admin/user/edit_membership/#{@user.id}") : sys_mng_edit_button_disabled() %>

<!-- ------------------ MEMBERS OF THIS GROUP ------------------ -->

<% if @is_group -%>
  <h1>Members of this group</h1>
    <% unless @user.id.to_i == User::GROUP_EVERYONE -%>
      <% @user.members.each do |member| -%>
        <%= user_html(member) %>
      <% end -%>
    <% else -%>
      <i>Everyone</i> is a special group which automatically contains every user in the system.
    <% end -%>
  </p>
  <%= (is_active && (@user.id != User::GROUP_EVERYONE) && show_access_buttons) ? sys_mng_edit_button("/do/admin/user/edit_members/#{@user.id}") : sys_mng_edit_button_disabled() %>
<% end -%>

<!-- ------------------ PERMISSIONS ------------------ -->

<h1>Policies</h1>
<p>These are the combined policies for all group membership.</p>

<table class="z__mng_permission_display">
  <%
    bitmask = @user.policy_bitmask
    KPolicyRegistry.entries.each do |e|
      mask = 1 << e.bitfield_index
      %><tr>
        <td class="z__permission_section_name"><%= h(e.printable_name) %></td>
        <td><% if 0 != (bitmask & mask) %>yes<% end %></td>
      </tr><%
    end
  %>
</table>
<%= (is_active && show_access_buttons) ? sys_mng_edit_button("/do/admin/user/policies/#{@user.id}") : sys_mng_edit_button_disabled() %>

<h1>Permissions</h1>
<p>Rules at the top of the list take precedence over rules below.</p>

<%
  # Have the permissions been modified by a plugin?
  unless @user.permissions.is_simple_statements?
    %><div class="z__general_alert">Plugins have added additional permissions in addition to these rules. Click "Show calculated permission label sets" below to list all permissions applied to this user.</div><%
  end
%>

<table class="z__mng_permission_display">
  <tr><th>User/Group/Plugin</th><th>Statement</th><th colspan="<%= KPermissionRegistry.entries.length %>">Permissions</th><th>Label</th><th>Distance</th></tr>
  <tr><th></th><th></th><%
    KPermissionRegistry.entries.each do |entry|
      %><th><%= entry.printable_name %></th><%
    end
  %><th></th><th></th></tr>
  <%
    # PERM TODO: Much nicer display of rules in user/group info -- could be implemented better?
    all_permissions_bitmask = KPermissionRegistry.to_bitmask(KPermissionRegistry.entries.map { |p| p.symbol })
    label_seen_bitmask = Hash.new(0)
    permission_rules = PermissionRule::RuleList.new.load_permission_rules_for_user(@user)._temp__rules_for_display
    permission_rules.each do |distance, statement, plugin_name, user_id, label_id, permissions|
      %><tr<% if label_seen_bitmask[label_id] == all_permissions_bitmask %> class="z__mng_permission_display_superseded"<% end %>>
        <td><%
          if plugin_name
            %><i><%= h(plugin_name) %></i><%
          else
            %><%= h(User.cache[user_id].name) %><%
          end
        %></td>
        <td><%= PermissionRule::STATEMENT_NAMES_FOR_UI.find { |x| x.last == statement } .first %></td><%
        mask = 0
        KPermissionRegistry.entries.each do |e|
          perm_mask = (1 << e.bitfield_index)
          if 0 != (permissions & perm_mask)
            mask |= perm_mask
            if 0 != (label_seen_bitmask[label_id] & perm_mask)
              %><td class="z__mng_permission_display_superseded">o</td><%
            else
              %><td>x</td><%
            end
          else
            %><td></td><%
          end
        end
        %><td><%= label_html(label_id) %></td>
        <td><%= distance %></td>
      </tr><%
      label_seen_bitmask[label_id] |= mask
    end
  %>
</table>
<%= (is_active && show_access_buttons) ? sys_mng_edit_button("/do/admin/user/permission_rules/#{@user.id}") : sys_mng_edit_button_disabled() %>
<div data-url="/do/admin/user/permission_rules_calc/<%= @user.id %>" id="z__mng_permission_display_calculated"><p><a href="#">Show calculated permission label sets...</a></p></div>

<!-- ------------------ RESTRICTION LABELS -------------- -->

<% if @is_user || @is_service_user %>
  <h1>Restriction labels</h1>
  <%
    restriction_labels = @user.attribute_restriction_labels
    if restriction_labels.empty?
      %><p><i>(no restriction labels have been set for this user)</i></p><%
    else
      %><p><% restriction_labels.each do |label_id| %>
        <%= label_html(label_id) %><br>
      <% end %></p><%
    end
  %>
  <p>Restriction labels are set by plugins and cannot be edited.</p>
<% end %>

<!-- ------------------ LATEST UPDATES ------------------ -->

<% unless @is_service_user -%>

  <h1><%= h(KApp.global(:name_latest).capitalize) %> settings</h1>

  <table class="z__mangement_kv_table">
    <tr><th>Schedule</th><td><%= @latest_updates_schedule %></td><td>(<%= h(@latest_updates_source) %>)</td></tr>
    <tr><th>Format</th><td><%= @latest_updates_format %></td><td>(<%= h(@latest_updates_source) %>)</td></tr>
    <tr><th>Email template</th><td><%= h(@latest_updates_template.name) %></td><td>(<%= h(@latest_template_source) %>)</tr>
  </table>
  <%= (is_active && show_property_buttons) ? sys_mng_edit_button("/do/admin/latest/settings/#{@user.id}") : sys_mng_edit_button_disabled() %>


  <h1><%= h(KApp.global(:name_latest_requests).capitalize) %></h1>

  <% @latest_update_requests.each do |req| %>
    <p><i><%= h(req.title) %></i></p>
  <% end -%>

  <p>Topics will also include topics set on this user's groups.</p>

  <%= (is_active && show_property_buttons) ? sys_mng_edit_button("/do/admin/latest/edit/#{@user.id}") : sys_mng_edit_button_disabled() %>

<% end -%>

<!-- ------------------ LOCALISATION SETTINGS ------------------ -->

<h1>Localisation</h1>

<table class="z__mangement_kv_table">
  <tr><th>Home country</th><td><%= KCountry::COUNTRY_BY_ISO[@home_country].name %> (<%= h(@home_country_source) %>)</td></tr>
  <tr><th>Time zone</th><td><%= @time_zone %> (<%= h(@time_zone_source) %>)</td></tr>
  <%
    display_locale = KLocale::ID_TO_LOCALE[@locale_id]
  %>
  <tr><th>Locale</th><td><%= display_locale.name %> (<%= display_locale.locale_id %>) (<%= h(@locale_source) %>)</td></tr>
</table>

<%= (is_active && show_property_buttons) ? sys_mng_edit_button("/do/admin/user/localisation/#{@user.id}") : sys_mng_edit_button_disabled() %>

<!-- ------------------ API KEYS ------------------ -->

<% if @is_user || @is_service_user %>

  <h1>API keys (communication with other software)</h1>
  <p>
  <% @api_keys.each do |ak| %>
    <a href="/do/admin/user/show_api_key/<%= ak.id %>"><%= h(ak.name) %></a><br>
  <% end %>
  </p>
  <p><i><a href="/do/admin/user/new_api_key?for=<%= @user.id %>">New API key</a></i></p>
<% end %>

<!-- ------------------ JAVASCRIPT ------------------ -->

<%= sys_mng_update_submenu(@user.name, "/do/admin/user/#{@is_user ? 'show' : 'group'}/#{@user.id}") %>
