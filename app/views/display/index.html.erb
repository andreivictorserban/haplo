<%
  @page_title = string_or_ktext_to_html(@obj_display.first_attr(KConstants::A_TITLE))

  unless @obj_is_deleted
    # Tell the layout (navigation etc) what object this page represents
    @represented_objref = @objref
    client_side_resources :tray
  end
%>

<%= render :partial => 'linked_types_ui' %>

<%
  if @elements != nil
    # Above object display
    %><%= @elements.html_for('top', DisplayController::OBJECT_ELEMENT_STYLE) %><%
    # Right hand column
    in_right_column @elements.html_for('right', DisplayController::OBJECT_ELEMENT_STYLE)
  end
%>

<% if @obj_is_deleted %><div class="z__deleted_object"><% end %>

<%= rendered_object = render_obj(@obj_display, params.has_key?('noaliasing'.freeze) ? :noaliasing : :generalview, @render_options) %>

<% if @obj_is_deleted %>
  </div>
  <% if @request_user.policy.has_permission?(:delete, @obj) %>
    <form class="z__undelete_button" method="POST" action="/do/edit/undelete/<%= @objref.to_presentation %>"><%= form_csrf_token %>
      <input type="submit" value="<%= @locale.text(:Display_View_Undelete) %>">
    </form>
  <% end %>
<% end %>

<% if @elements != nil %>
  <%
    # TODO: Reconsider this hack to stop extra space being taken up when the object display is hidden, makes too many assumption
    unless rendered_object.empty?
      %><p>&nbsp;</p><%
    end
  %>
  <%= @elements.html_for('bottom', DisplayController::OBJECT_ELEMENT_STYLE) %>
<% end %>

<%
  if @plugin_object_display_behaviour == nil || !(@plugin_object_display_behaviour.hideModificationInfo)
    created_by = @obj.creation_user_id
    modified_by = @obj.last_modified_user_id
    # Displayed by the main application layout
    @page_creation_label_html = @locale.text_format(:Display_Modification_Info_Dates, @obj.obj_creation_time.to_s(:obj_dates), @obj.obj_update_time.to_s(:obj_dates))
    @page_creation_label_html << ' '
    if created_by == modified_by
      @page_creation_label_html << @locale.text_format(:Display_Modification_Info_User_Same, User.cache[created_by].name)
    else
      @page_creation_label_html << @locale.text_format(:Display_Modification_Info_User_Different, User.cache[created_by].name, User.cache[modified_by].name)
    end
    if @label_display
      @page_creation_label_html << "<br>"
      @label_display.each do |label_ref|
        @page_creation_label_html << label_html(label_ref)
        @page_creation_label_html << ' '
      end
    end
  end
%>
