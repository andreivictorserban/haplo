
JavaScript API undocumented features
------------------------------------

Data handling
-------------
O.text constructor takes dictionaries for T_TEXT_PERSON_NAME and T_IDENTIFIER_POSTAL_ADDRESS.
O.text constructor takes dictionary for T_IDENTIFIER_TELEPHONE_NUMBER which does phone number guessing.
Text objects toString() and s() take optional format strings. Telephone number has formatting options.
File identifier toString()/s() returns the filename for no format or "filename", a string ID for "id", and the MIME type for format "type"
Text objects toFields(), with different options based on type. Includes typecode key.

File handling
-------------
File transforms for url() and toHTML()

Templates
---------

std:resource:tree
std:treesource
std:jquery_ui:sortable
std:jquery_ui:slider
std:render_doc_as_html
std:resource:plugin_adaptor
std:oforms:changes
std:search_results
std:element + handlebars helper

std:new_object_editor has readOnlyAttributes property

action panel style(), 'special' style using elements with 'deferred' property to add arbitrary HTML into panels


Taking over object rendering
----------------------------
Use render type of 'hide' or 'blank', use Element below to render whatever you want.
For search results, plugin.renderSearchResult() and renderer object

Plugin defined text types
-------------------------
P.implementTextType(), editor plugin, O.isPluginTextValue()

Users & permissions
-------------------
SecurityPrincipal getPermissions(), hasPermissions()
SecurityPrincipal setAsLoggedInUser() + pSetLoggedInUser (NOTE: doesn't take effect until *next* request)
hOperationAllowOnObject hook

System setup
------------
IMPORTANT: Note on cache invalidation and when changes will take effect.
O.setup.createUser({nameFirst:'', nameLast:'', email:'', ref:O.ref(x), groups:[]}) and pCreateUser privilege
O.setup.createGroup() and pSetupSystem privilege (extend later with pSetupSystemOnInstall for setup with onInstall only)
SecurityPrincipal setIsActive() and pUserActivation privilege
SecurityPrincipal setDetails() and pUserSetDetails privilege
SecurityPrincipal writable ref property and pUserSetRef privilege
SecurityPrincipal generatePasswordRecoveryURL(), generateWelcomeURL(), and pUserPasswordRecovery privilege
O.PERM_* constants
SecurityPrincipal changeGroupMemberships(), setGroupMemberships()

Databases
---------
P.db._dynamicTable(...) for tables which can be redefined at runtime.
whereJSONProperty(), because it's not indexed and has to be used carefully.

Request continuations
---------------------
RequestContinuation interface
E.continuation
O.resumeRequestWithContinuationIdentifier()

Misc
----
O.tray
setResponsiblePlugin() in Exchange objects
O.reportHealthEvent() + pReportHealthEvent
O.PLUGIN_DEBUGGING_ENABLED flags for checking development servers
O.uuid.*() - but we prefer O.security.random.identifier()
O.enforcePluginPrivilege()

Client side object editor plugins
---------------------------------
hObjectEditor hook
Client side plugin adaptor implementing interface for object editor plugins.
Server side support as O.editor.* functions (interface needs a little bit of tidying though)

Access remote services
----------------------
O.remote.collaboration.* functions.
O.remote.authentication.* functions for authenticating and searching.
O.remote.authentication.urlToStartOAuth(data, name) and pStartOAuth
